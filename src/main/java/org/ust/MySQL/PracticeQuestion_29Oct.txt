Setup Reminder
Make sure the following tables exist in your database:

Employees

emp_id	emp_name	salary	dept_id
1	Alice	50000	1
2	Bob	60000	1
3	Charlie	55000	2
4	David	70000	3
5	Eve	65000	2
Departments

dept_id	dept_name
1	HR
2	Finance
3	IT
Projects

project_id	project_name	dept_id
101	Project Alpha	1
102	Project Beta	2
103	Project Gamma	3
104	Project Delta	1
Questions
Basic Queries and Aggregates
Retrieve Employee Salary Details by Department

Retrieve the emp_id, emp_name, salary, and dept_name for all employees. Include only those
departments that have at least two employees.
Sort the results by dept_name and then by salary in descending order.
Expected Output:

emp_id	emp_name	salary	dept_name
2	Bob	60000	HR
1	Alice	50000	HR
5	Eve	65000	Finance
3	Charlie	55000	Finance
Count of Employees by Department with Project

Find the count of employees (employee_count) in each department
with a project assigned. List only departments with at least one project.
Expected Output:

dept_name	employee_count
HR	2
Finance	2
IT	1
Departments with Total Salary Above Average

Retrieve dept_name for departments where the total salary paid
 to employees is higher than the average total salary across all departments.
Expected Output:

dept_name
Finance
List Projects with Corresponding Department Names

List all project_names and the corresponding dept_names. Include departments without projects, showing "No Project" for project_name.
Expected Output:

project_name	dept_name
Project Alpha	HR
Project Delta	HR
Project Beta	Finance
Project Gamma	IT
Employees Earning More than Department Average

Retrieve emp_name and salary of employees who earn more than the average salary of their respective department.
Expected Output:

emp_name	salary
Bob	60000
Eve	65000
David	70000
Subqueries and Joins
Projects with Total Salary for Each Department

For each project, display the project_name and the total salary of all employees in that project’s department.
Expected Output:

project_name	total_salary
Project Alpha	110000
Project Beta	120000
Project Gamma	70000
Project Delta	110000
List Employees Working in the Department of the Highest Earner

Identify all employees working in the same department as the highest-paid employee. Exclude the highest-paid employee from the result.
Expected Output:

emp_name
(None, as David is the only one in IT)
Find Departments Without Employees

Retrieve the dept_name for departments that currently have no employees assigned.
Expected Output:

dept_name
(None, as all departments have employees)
List Departments and Total Employees per Project

For each project, list the project_name and the total number of employees in that project’s department.
Expected Output:

project_name	employee_count
Project Alpha	2
Project Beta	2
Project Gamma	1
Project Delta	2
Identify Departments with Only One Employee

List the dept_name of departments that have only one employee.
Expected Output:

dept_name
IT
Nested Aggregates and Advanced Filtering
Department(s) with Highest Total Salary

Retrieve the dept_name of the department with the highest total salary.
Expected Output:

dept_name
Finance
List Employees Earning More Than the Company Average

Retrieve the emp_name of employees who earn more than the company-wide average salary.
Expected Output:

emp_name
Bob
David
Eve
Count of Projects by Department

For each department, display the dept_name and the count of project_ids. Include departments with no projects (with a count of zero).
Expected Output:

dept_name	project_count
HR	2
Finance	1
IT	1
Find Employees Not Assigned to Any Department Projects

Retrieve emp_name of employees in departments with no projects assigned.
Expected Output:

emp_name
(None, as all departments have projects)
Retrieve Departments with Employee Count Greater than Two

List the dept_name of departments that have more than two employees.
Expected Output:

dept_name
(None, as no department has more than two employees)
Advanced Subqueries and Complex Joins
Projects with Highest Salary Employees

Find the project_name for projects belonging to departments where the highest salary employee works.
Expected Output:

project_name
Project Gamma
Retrieve Employees with Highest Salary by Department

For each department, list the emp_name and salary of the employee(s) earning the highest salary in that department.
Expected Output:

dept_name	emp_name	salary
HR	Bob	60000
Finance	Eve	65000
IT	David	70000
Departments with Projects Not Assigned to All Employees

List dept_names of departments where not all employees are assigned to a project.
Expected Output:

dept_name
(None, as all departments have projects assigned)
Average Salary of Each Project’s Department

Display the project_name and the average salary of employees in each project’s department.
Expected Output:

project_name	avg_salary
Project Alpha	55000
Project Beta	60000
Project Gamma	70000
Project Delta	55000
Retrieve Employees Who Earn More than 90% of Their Department's Total Salary

List the emp_name of employees whose salary is more than 90% of their department's total salary.
Expected Output:

emp_name
David


Solution:


### 1. Retrieve Employee Salary Details by Department

```sql
SELECT e.emp_id, e.emp_name, e.salary, d.dept_name
FROM Employees e
JOIN Departments d ON e.dept_id = d.dept_id
WHERE e.dept_id IN (
    SELECT dept_id
    FROM Employees
    GROUP BY dept_id
    HAVING COUNT(emp_id) >= 2
)
ORDER BY d.dept_name DESC, e.salary DESC;
```

### 2. Count of Employees by Department with Project

```sql
SELECT d.dept_name, COUNT(e.emp_id) AS employee_count
FROM Departments d
JOIN Projects p ON d.dept_id = p.dept_id
JOIN Employees e ON e.dept_id = d.dept_id
GROUP BY d.dept_name;
```

### 3. Departments with Total Salary Above Average

```sql
SELECT dept_name
FROM Departments d
JOIN Employees e ON d.dept_id = e.dept_id
GROUP BY d.dept_id
HAVING SUM(e.salary) > (
    SELECT AVG(total_salary)
    FROM (
        SELECT SUM(salary) AS total_salary
        FROM Employees
        GROUP BY dept_id
    ) AS dept_salaries
);
```

### 4. List Projects with Corresponding Department Names

```sql
SELECT COALESCE(p.project_name, 'No Project') AS project_name, d.dept_name
FROM Departments d
LEFT JOIN Projects p ON d.dept_id = p.dept_id;
```

### 5. Employees Earning More than Department Average

```sql
SELECT emp_name, salary
FROM Employees e
WHERE salary > (
    SELECT AVG(salary)
    FROM Employees
    WHERE dept_id = e.dept_id
);
```

### 6. Projects with Total Salary for Each Department

```sql
SELECT p.project_name, SUM(e.salary) AS total_salary
FROM Projects p
JOIN Employees e ON p.dept_id = e.dept_id
GROUP BY p.project_id;
```

### 7. List Employees Working in the Department of the Highest Earner

```sql
SELECT emp_name
FROM Employees
WHERE dept_id = (
    SELECT dept_id
    FROM Employees
    ORDER BY salary DESC
    LIMIT 1
)
AND emp_id != (
    SELECT emp_id
    FROM Employees
    ORDER BY salary DESC
    LIMIT 1
);
```

### 8. Find Departments Without Employees

```sql
SELECT dept_name
FROM Departments d
LEFT JOIN Employees e ON d.dept_id = e.dept_id
WHERE e.emp_id IS NULL;
```

### 9. List Departments and Total Employees per Project

```sql
SELECT p.project_name, COUNT(e.emp_id) AS employee_count
FROM Projects p
JOIN Employees e ON p.dept_id = e.dept_id
GROUP BY p.project_id;
```

### 10. Identify Departments with Only One Employee

```sql
SELECT dept_name
FROM Departments d
JOIN Employees e ON d.dept_id = e.dept_id
GROUP BY d.dept_id
HAVING COUNT(e.emp_id) = 1;
```

### 11. Department(s) with Highest Total Salary

```sql
SELECT dept_name
FROM Departments d
JOIN Employees e ON d.dept_id = e.dept_id
GROUP BY d.dept_id
ORDER BY SUM(e.salary) DESC
LIMIT 1;
```

### 12. List Employees Earning More Than the Company Average

```sql
SELECT emp_name
FROM Employees
WHERE salary > (
    SELECT AVG(salary)
    FROM Employees
);
```

### 13. Count of Projects by Department

```sql
SELECT d.dept_name, COUNT(p.project_id) AS project_count
FROM Departments d
LEFT JOIN Projects p ON d.dept_id = p.dept_id
GROUP BY d.dept_id;
```

### 14. Find Employees Not Assigned to Any Department Projects

```sql
SELECT emp_name
FROM Employees e
WHERE dept_id NOT IN (SELECT dept_id FROM Projects);
```

### 15. Retrieve Departments with Employee Count Greater than Two

```sql
SELECT dept_name
FROM Departments d
JOIN Employees e ON d.dept_id = e.dept_id
GROUP BY d.dept_id
HAVING COUNT(e.emp_id) > 2;
```

### 16. Projects with Highest Salary Employees

```sql
SELECT project_name
FROM Projects p
WHERE dept_id = (
    SELECT dept_id
    FROM Employees
    ORDER BY salary DESC
    LIMIT 1
);
```

### 17. Retrieve Employees with Highest Salary by Department

```sql
SELECT d.dept_name, e.emp_name, e.salary
FROM Employees e
JOIN Departments d ON e.dept_id = d.dept_id
WHERE (e.dept_id, e.salary) IN (
    SELECT dept_id, MAX(salary)
    FROM Employees
    GROUP BY dept_id
);
```

### 18. Departments with Projects Not Assigned to All Employees

```sql
SELECT dept_name
FROM Departments d
WHERE NOT EXISTS (
    SELECT 1
    FROM Employees e
    WHERE e.dept_id = d.dept_id
    AND e.emp_id NOT IN (
        SELECT e2.emp_id
        FROM Projects p
        JOIN Employees e2 ON p.dept_id = e2.dept_id
        WHERE e2.dept_id = d.dept_id
    )
);
```

### 19. Average Salary of Each Project’s Department

```sql
SELECT p.project_name, AVG(e.salary) AS avg_salary
FROM Projects p
JOIN Employees e ON p.dept_id = e.dept_id
GROUP BY p.project_id;
```

### 20. Retrieve Employees Who Earn More than 90% of Their Department's Total Salary

```sql
SELECT emp_name
FROM Employees e
WHERE salary > 0.9 * (
    SELECT SUM(salary)
    FROM Employees
    WHERE dept_id = e.dept_id
);
```



