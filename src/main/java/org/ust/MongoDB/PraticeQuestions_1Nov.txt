

### Sample Data in the `students` Collection

```json
[
    { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
    { "_id": 2, "name": "Bob", "age": 22, "grade": "B", "subjects": ["Math", "History"] },
    { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] },
    { "_id": 4, "name": "David", "age": 23, "grade": "C", "subjects": ["History", "English"] },
    { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
]
```

---

### 1. **Basic Document Retrieval**

   **Question**: Retrieve all documents in the `students` collection.

   **Expected Output**:
   - This query will display all documents in the `students` collection, showing each studentâ€™s `_id`, `name`, `age`, `grade`, and `subjects`.

   ```json
   [
       { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
       { "_id": 2, "name": "Bob", "age": 22, "grade": "B", "subjects": ["Math", "History"] },
       { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] },
       { "_id": 4, "name": "David", "age": 23, "grade": "C", "subjects": ["History", "English"] },
       { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
   ]
   ```

---

### 2. **Filter Documents with a Condition**

   **Question**: Retrieve documents where the student has a grade of "A".

   **Expected Output**:
   - Only students with a grade of "A" will be returned.

   ```json
   [
       { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
       { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] }
   ]
   ```

---

### 3. **Project Specific Fields**

   **Question**: Retrieve the `name` and `age` of all students, excluding other fields.

   **Expected Output**:
   - This will show only the `name` and `age` fields for each student.

   ```json
   [
       { "name": "Alice", "age": 20 },
       { "name": "Bob", "age": 22 },
       { "name": "Charlie", "age": 21 },
       { "name": "David", "age": 23 },
       { "name": "Eva", "age": 20 }
   ]
   ```

---

### 4. **Filter with Multiple Conditions**

   **Question**: Retrieve all students who are 20 years old and have a grade of "B".

   **Expected Output**:
   - Only students who meet both conditions (age 20 and grade "B") will be returned.

   ```json
   [
       { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
   ]
   ```

---

### 5. **Filter Documents with Array Values**

   **Question**: Retrieve all students who are studying "Math" as one of their subjects.

   **Expected Output**:
   - All students with "Math" in their `subjects` array will be returned.

   ```json
   [
       { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
       { "_id": 2, "name": "Bob", "age": 22, "grade": "B", "subjects": ["Math", "History"] },
       { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] },
       { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
   ]
   ```

---


Solutions:



### 1. **Basic Document Retrieval**

   **Query**:
   ```javascript
   db.students.find({})
   ```

   **Explanation**:
   - This query retrieves all documents in the `students` collection without any filters.

   **Expected Output**:
   ```json
   [
       { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
       { "_id": 2, "name": "Bob", "age": 22, "grade": "B", "subjects": ["Math", "History"] },
       { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] },
       { "_id": 4, "name": "David", "age": 23, "grade": "C", "subjects": ["History", "English"] },
       { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
   ]
   ```

---

### 2. **Filter Documents with a Condition**

   **Query**:
   ```javascript
   db.students.find({ grade: "A" })
   ```

   **Explanation**:
   - This query filters documents to return only those where the `grade` is "A".

   **Expected Output**:
   ```json
   [
       { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
       { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] }
   ]
   ```

---

### 3. **Project Specific Fields**

   **Query**:
   ```javascript
   db.students.find({}, { name: 1, age: 1, _id: 0 })
   ```

   **Explanation**:
   - This query retrieves only the `name` and `age` fields for each document, excluding the `_id` field by setting `_id: 0`.

   **Expected Output**:
   ```json
   [
       { "name": "Alice", "age": 20 },
       { "name": "Bob", "age": 22 },
       { "name": "Charlie", "age": 21 },
       { "name": "David", "age": 23 },
       { "name": "Eva", "age": 20 }
   ]
   ```

---

### 4. **Filter with Multiple Conditions**

   **Query**:
   ```javascript
   db.students.find({ age: 20, grade: "B" })
   ```

   **Explanation**:
   - This query uses both `age` and `grade` as conditions to retrieve documents where `age` is 20 and `grade` is "B".

   **Expected Output**:
   ```json
   [
       { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
   ]
   ```

---

### 5. **Filter Documents with Array Values**

   **Query**:
   ```javascript
   db.students.find({ subjects: "Math" })
   ```

   **Explanation**:
   - This query retrieves documents where the `subjects` array contains the value "Math".

   **Expected Output**:
   ```json
   [
       { "_id": 1, "name": "Alice", "age": 20, "grade": "A", "subjects": ["Math", "English"] },
       { "_id": 2, "name": "Bob", "age": 22, "grade": "B", "subjects": ["Math", "History"] },
       { "_id": 3, "name": "Charlie", "age": 21, "grade": "A", "subjects": ["Science", "Math"] },
       { "_id": 5, "name": "Eva", "age": 20, "grade": "B", "subjects": ["Science", "Math"] }
   ]
   ```

---


